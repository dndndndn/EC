# Generated by Django 2.1.1 on 2019-02-17 03:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('login', '0007_auto_20190204_1149'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('ID', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, verbose_name='文字')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('m_time', models.DateTimeField(auto_now=True, verbose_name='最新修改日期')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='ans_creater', to='login.User', verbose_name='创建人')),
                ('modify_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='ans_modifier', to='login.User', verbose_name='编辑人')),
            ],
            options={
                'verbose_name': '选项',
                'verbose_name_plural': '选项',
                'ordering': ['-ID'],
            },
        ),
        migrations.CreateModel(
            name='Chioce',
            fields=[
                ('ID', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('Bool', models.BooleanField(default=True, verbose_name='正确标志')),
                ('type', models.IntegerField(choices=[(0, '图片'), (1, '文字'), (2, '数字')], verbose_name='类型')),
                ('text', models.TextField(blank=True, verbose_name='文字')),
                ('number', models.IntegerField(blank=True, verbose_name='数字')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('m_time', models.DateTimeField(auto_now=True, verbose_name='最新修改日期')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='choice_creater', to='login.User', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '选项',
                'verbose_name_plural': '选项',
                'ordering': ['-ID'],
            },
        ),
        migrations.CreateModel(
            name='Chioce_tips',
            fields=[
                ('ID', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, verbose_name='文字')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('m_time', models.DateTimeField(auto_now=True, verbose_name='最新修改日期')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='tips_creater', to='login.User', verbose_name='创建人')),
                ('related_question',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='t_question', to='android.Chioce', verbose_name='所属选项')),
            ],
            options={
                'verbose_name': '错误选项提示',
                'verbose_name_plural': '错误选项提示',
                'ordering': ['-ID'],
            },
        ),
        migrations.CreateModel(
            name='content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type',
                 models.CharField(choices=[('txt', 'text'), ('img', 'image')], max_length=15, verbose_name='题干类型')),
                ('img', models.FileField(blank=True, upload_to='img/%Y/%m/%d')),
                ('text', models.TextField(blank=True)),
                ('next_content',
                 models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                      related_name='prev_content', to='android.content')),
            ],
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='事件名称')),
                ('event_type', models.SmallIntegerField(
                    choices=[(0, '其它'), (1, '添加/删除问题'), (2, '编辑问题'), (3, '问题管理'), (4, '添加测试'), (5, '定期维护'),
                             (6, '用户管理添加\\删除'), (7, '用户管理更新')], default=5, verbose_name='事件类型')),
                ('component', models.CharField(blank=True, max_length=256, null=True, verbose_name='事件子项')),
                ('detail', models.TextField(verbose_name='事件详情')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='事件时间')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '事件纪录',
                'verbose_name_plural': '事件纪录',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='分组名')),
                ('c_day', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='Group_creater', to='login.User', verbose_name='创建人')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Quesion',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Q_Status', models.SmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '审核'), (3, '编辑')], default=2,
                                                      verbose_name='状态')),
                ('text', models.CharField(blank=True, default='', max_length=15, null=True, verbose_name='题目标题')),
                ('choice_type',
                 models.SmallIntegerField(choices=[(0, '单选'), (1, '多选'), (2, '拍照'), (3, '填空')], verbose_name='选项类型')),
                ('choice_length', models.SmallIntegerField(verbose_name='选项长度')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('m_time', models.DateTimeField(auto_now=True, verbose_name='最新修改日期')),
                ('AC', models.PositiveIntegerField(verbose_name='全对人数')),
                ('general_priority',
                 models.SmallIntegerField(choices=[(0, '关键'), (1, '重要'), (2, '一般'), (3, '用处较小')], verbose_name='优先度')),
                ('ans', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='android.Answer')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                related_name='quesion_creater', to='login.User', verbose_name='创建人')),
                ('group', models.ManyToManyField(blank=True, to='android.Group', verbose_name='分组')),
                ('solution', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                                  related_name='question_solution', to='android.content')),
                ('stem', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              related_name='question_stem', to='android.content')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('ID', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('begin_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('AC', models.BooleanField(default=False)),
                ('end_time', models.DateTimeField(auto_now_add=True, verbose_name='完成日期')),
                ('duration', models.DurationField()),
                ('related_question',
                 models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                      related_name='r_question', to='android.Quesion', verbose_name='所属问题')),
            ],
            options={
                'verbose_name': '记录',
                'verbose_name_plural': '记录',
                'ordering': ['-ID'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='标签名')),
                ('c_day', models.DateField(auto_now_add=True, verbose_name='创建日期')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.AddField(
            model_name='record',
            name='tags',
            field=models.ManyToManyField(blank=True, to='android.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='record',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='r_user', to='login.User', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='quesion',
            name='tags',
            field=models.ManyToManyField(blank=True, to='android.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='eventlog',
            name='quesion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='android.Quesion'),
        ),
        migrations.AddField(
            model_name='eventlog',
            name='record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    to='android.Record'),
        ),
        migrations.AddField(
            model_name='eventlog',
            name='target_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='target_user', to='login.User', verbose_name='目标用户'),
        ),
        migrations.AddField(
            model_name='eventlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='execute_user', to='login.User', verbose_name='事件执行人'),
        ),
        migrations.AddField(
            model_name='chioce_tips',
            name='tags',
            field=models.ManyToManyField(blank=True, to='android.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='chioce',
            name='related_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='c_question', to='android.Quesion', verbose_name='所属问题'),
        ),
        migrations.AddField(
            model_name='chioce',
            name='tags',
            field=models.ManyToManyField(blank=True, to='android.Tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='answer',
            name='related_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='a_question', to='android.Quesion', verbose_name='所属问题'),
        ),
        migrations.AddField(
            model_name='answer',
            name='tags',
            field=models.ManyToManyField(blank=True, to='android.Tag', verbose_name='标签'),
        ),
    ]
